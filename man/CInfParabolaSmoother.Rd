% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayes_main.R
\name{CInfParabolaSmoother}
\alias{CInfParabolaSmoother}
\title{C^Inf Parabola Smoother - Ulrich Multze}
\usage{
CInfParabolaSmoother(xvec, yvec)
}
\arguments{
\item{xvec}{A vector of the x values}

\item{yvec}{A vector of the y values}

\item{x}{The input value to the function}
}
\description{
Take in a vector of x and y values and return the meromorphic weighting of parabola splines as suggested by Ulrich Multz. This function is resulting C^Inf meaning all derivatives are continuious!
This funcion returns a function that allows you to compute this for an arbitrary x
}
\examples{
 
This example aims to show the boundary polynomials that are used in this 
method of interpolation. The black line is the meromorphic weight of the two
interpolating polynomials that are to the left and to the right of the 
given value of x
xvec = 1:10
yvec = runif(10) * x
Get the interpolating function
myfunc <- CInfParabolaSmoother(xvec,yvec)
Plot the curve and the points
curve(myfunc, 1,10)
points(cbind(xvec,yvec), pch = 3)
Draw in the boundary polynomials
for (i in 2:9) {
curve(parabolaInterpolate(x, xvec[seq(i-1,i+1)],yvec[seq(i-1,i+1)]), xvec[i-1], xvec[i + 1], add = T, col = "blue", lty = 2)
}
}
\keyword{interpolate}
\keyword{interpolation}
\keyword{parabola}

